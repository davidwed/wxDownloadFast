# Projeto: wxDownload Fast
RESOURCE_DIR = resources/
SOURCE_DIR = src/
LANGUAGE_DIR = languages/
BUILD_DIR = build-gcc/
CPP  = g++
CC   = gcc
WINDRES = windres
STRIP = strip
INSTALL = /usr/bin/install
INSTALL_FILE = $(INSTALL) -m 644
INSTALL_DIR = $(INSTALL) -d 

ifeq ($(XRC), 1)
OBJ  = $(BUILD_DIR)BoxFind.o $(BUILD_DIR)BoxNew.o $(BUILD_DIR)BoxOptions.o $(BUILD_DIR)DownloadFile.o $(BUILD_DIR)DownloadThread.o $(BUILD_DIR)FinishedList.o $(BUILD_DIR)InProgressList.o $(BUILD_DIR)urlname.o $(BUILD_DIR)wxDFast.o
else
OBJ  = $(BUILD_DIR)BoxFind.o $(BUILD_DIR)BoxNew.o $(BUILD_DIR)BoxOptions.o $(BUILD_DIR)DownloadFile.o $(BUILD_DIR)DownloadThread.o $(BUILD_DIR)FinishedList.o $(BUILD_DIR)InProgressList.o $(BUILD_DIR)urlname.o $(BUILD_DIR)wxDFast.o $(BUILD_DIR)Resources.o
endif

LINKOBJ  = $(OBJ)
LIBS =  -L"/usr/lib" -L$(BUILD_DIR) -lwxmd5 `wx-config --libs` -Wl
INCS =  -I"/usr/include" -I"/usr/local/include" `wx-config --cxxflags`
RESINCS = --include-dir="/usr/include" --include-dir="/usr/local/include"
CXXINCS =  `wx-config --cxxflags`

ifeq ($(XRC), 1)
CXXFLAGS = $(INCS) -Wall -O2 -MMD
else
CXXFLAGS = $(INCS) -Wall -O2 -MMD -D RESOURCES_CPP
endif

WXMD5 = libwxmd5.a
CFLAGS = $(INCS)
BIN = wxdfast
RES = $(BIN).res
VERSION = 0.2.1

ifeq ($(BUILD), win32)
all: criardir $(BIN).exe

$(BIN).exe: $(LINKOBJ) $(WXMD5) $(RES)
	$(CPP) $(LINKOBJ) -o $(BIN).exe $(LIBS) $(BUILD_DIR)$(RES)
	$(STRIP) $(BIN).exe
else
all: criardir $(BIN)

$(BIN): $(LINKOBJ) $(WXMD5)
	$(CPP) $(LINKOBJ) -o $(BIN) $(LIBS)
	$(STRIP) $(BIN)
endif

$(BUILD_DIR)Resources.cpp: $(RESOURCE_DIR)boxnew.xrc $(RESOURCE_DIR)boxoptions.xrc $(RESOURCE_DIR)mainwindow.xrc
ifeq ($(XRC), 1)
	
else
	wxrc -c -o $(BUILD_DIR)Resources.cpp resources/*.xrc
endif

criardir:
	if [ ! -e $(BUILD_DIR) ]; then mkdir "$(BUILD_DIR)"; fi

$(BUILD_DIR)Resources.o: $(BUILD_DIR)Resources.cpp
	$(CPP) -c $(BUILD_DIR)Resources.cpp -o $(BUILD_DIR)Resources.o $(CXXFLAGS)

$(BUILD_DIR)BoxFind.o: src/BoxFind.cpp
	$(CPP) -c src/BoxFind.cpp -o $(BUILD_DIR)BoxFind.o $(CXXFLAGS)

$(BUILD_DIR)BoxNew.o: src/BoxNew.cpp
	$(CPP) -c src/BoxNew.cpp -o $(BUILD_DIR)BoxNew.o $(CXXFLAGS)

$(BUILD_DIR)BoxOptions.o: src/BoxOptions.cpp
	$(CPP) -c src/BoxOptions.cpp -o $(BUILD_DIR)BoxOptions.o $(CXXFLAGS)

$(BUILD_DIR)DownloadFile.o: src/DownloadFile.cpp
	$(CPP) -c src/DownloadFile.cpp -o $(BUILD_DIR)DownloadFile.o $(CXXFLAGS)

$(BUILD_DIR)DownloadThread.o: src/DownloadThread.cpp
	$(CPP) -c src/DownloadThread.cpp -o $(BUILD_DIR)DownloadThread.o $(CXXFLAGS)

$(BUILD_DIR)FinishedList.o: src/FinishedList.cpp
	$(CPP) -c src/FinishedList.cpp -o $(BUILD_DIR)FinishedList.o $(CXXFLAGS)

$(BUILD_DIR)InProgressList.o: src/InProgressList.cpp
	$(CPP) -c src/InProgressList.cpp -o $(BUILD_DIR)InProgressList.o $(CXXFLAGS)

$(BUILD_DIR)urlname.o: src/urlname.cpp
	$(CPP) -c src/urlname.cpp -o $(BUILD_DIR)urlname.o $(CXXFLAGS)

$(BUILD_DIR)wxDFast.o: src/wxDFast.cpp
	$(CPP) -c src/wxDFast.cpp -o $(BUILD_DIR)wxDFast.o $(CXXFLAGS)

$(RES): src/DFast.rc 
	$(WINDRES) -i src/DFast.rc -I rc -o $(BUILD_DIR)$(RES) -O coff $(RESINCS)

$(WXMD5): $(BUILD_DIR)md5.o $(BUILD_DIR)wxMD5.o
	ar cur $(BUILD_DIR)$(WXMD5) $(BUILD_DIR)wxMD5.o $(BUILD_DIR)md5.o

$(BUILD_DIR)md5.o: src/wxMD5/md5.c
	$(CPP) -c src/wxMD5/md5.c -o $(BUILD_DIR)md5.o $(CXXFLAGS)

$(BUILD_DIR)wxMD5.o: src/wxMD5/wxMD5.cpp
	$(CPP) -c src/wxMD5/wxMD5.cpp -o $(BUILD_DIR)wxMD5.o $(CXXFLAGS)

install:
	$(INSTALL_DIR) $(DESTDIR)/usr/lib/$(BIN)
ifeq ($(BUILD), win32)
	$(INSTALL_FILE) --mode=755 $(BIN).exe $(DESTDIR)/usr/lib/$(BIN)
	ln -s $(DESTDIR)/usr/lib/$(BIN)/$(BIN).exe $(DESTDIR)/usr/bin/$(BIN).exe
else
	$(INSTALL_FILE) --mode=755 $(BIN) $(DESTDIR)/usr/lib/$(BIN)
	ln -s $(DESTDIR)/usr/lib/$(BIN)/$(BIN) $(DESTDIR)/usr/bin/$(BIN)
endif
	$(INSTALL_FILE) Readme.* $(DESTDIR)/usr/lib/$(BIN)
	$(INSTALL_FILE) Changes.* $(DESTDIR)/usr/lib/$(BIN)
	$(INSTALL_FILE) gpl.txt $(DESTDIR)/usr/lib/$(BIN)
	$(INSTALL_DIR) $(DESTDIR)/usr/share/pixmaps
	$(INSTALL_FILE) $(RESOURCE_DIR)wxdfast.xpm $(DESTDIR)/usr/share/pixmaps
	$(INSTALL_DIR) $(DESTDIR)/usr/share/$(BIN)
	$(INSTALL_FILE) $(RESOURCE_DIR)wxdfast.ico $(DESTDIR)/usr/share/$(BIN)
ifeq ($(XRC), 1)
	$(INSTALL_FILE) $(RESOURCE_DIR)*.xrc $(DESTDIR)/usr/lib/$(BIN)/$(RESOURCE_DIR)
endif
	$(INSTALL_DIR) $(DESTDIR)/usr/share/locale/pt_BR/LC_MESSAGES
	$(INSTALL_FILE) $(LANGUAGE_DIR)pt_BR/wxDFast.mo $(DESTDIR)/usr/share/locale/pt_BR/LC_MESSAGES
	$(INSTALL_DIR) $(DESTDIR)/usr/share/locale/es/LC_MESSAGES
	$(INSTALL_FILE) $(LANGUAGE_DIR)es/wxDFast.mo $(DESTDIR)/usr/share/locale/es/LC_MESSAGES
	$(INSTALL_DIR) $(DESTDIR)/usr/lib/menu
	echo "?package(wxdfast): \ " > $(DESTDIR)/usr/lib/menu/wxdfast
	echo "      needs="X11" \ " >> $(DESTDIR)/usr/lib/menu/wxdfast
	echo "      section="Apps/Net" \ " >> $(DESTDIR)/usr/lib/menu/wxdfast
	echo "      title="wxDFast" \ " >> $(DESTDIR)/usr/lib/menu/wxdfast
	echo "      command="/usr/bin/wxdfast" \ " >> $(DESTDIR)/usr/lib/menu/wxdfast
	echo "      icon="/usr/share/pixmaps/wxdfast.xpm"" >> $(DESTDIR)/usr/lib/menu/wxdfast
	$(INSTALL_DIR) $(DESTDIR)/usr/share/applications
	echo "[Desktop Entry]" > $(DESTDIR)/usr/share/applications/wxdfast.desktop
	echo "Version=1.0" >> $(DESTDIR)/usr/share/applications/wxdfast.desktop
	echo "Encoding=UTF-8" >> $(DESTDIR)/usr/share/applications/wxdfast.desktop
	echo "Name=wxDFast" >> $(DESTDIR)/usr/share/applications/wxdfast.desktop
	echo "GenericName=wxDFast" >> $(DESTDIR)/usr/share/applications/wxdfast.desktop
	echo "Comment=Multi-thread Download Manager" >> $(DESTDIR)/usr/share/applications/wxdfast.desktop
	echo "Exec=wxdfast %u" >> $(DESTDIR)/usr/share/applications/wxdfast.desktop
	echo "TryExec=wxdfast" >> $(DESTDIR)/usr/share/applications/wxdfast.desktop
	echo "Icon=wxdfast.xpm" >> $(DESTDIR)/usr/share/applications/wxdfast.desktop
	echo "Terminal=0" >> $(DESTDIR)/usr/share/applications/wxdfast.desktop
	echo "Type=Application" >> $(DESTDIR)/usr/share/applications/wxdfast.desktop
	echo "Categories=Application;GTK;GNOME;Network;FileTransfer;" >> $(DESTDIR)/usr/share/applications/wxdfast.desktop

uninstall:
ifeq ($(BUILD), win32)
	rm -f $(DESTDIR)/usr/lib/$(BIN)/$(BIN).exe
	rm -f $(DESTDIR)/usr/bin/$(BIN).exe
else
	rm -f $(DESTDIR)/usr/lib/$(BIN)/$(BIN)
	rm -f $(DESTDIR)/usr/bin/$(BIN)
endif
	rm -f $(DESTDIR)/usr/lib/$(BIN)/Readme.*
	rm -f $(DESTDIR)/usr/lib/$(BIN)/Changes.*
	rm -f $(DESTDIR)/usr/lib/$(BIN)/gpl.txt
	rm -f $(DESTDIR)/usr/share/pixmaps/wxdfast.xpm
	rm -f $(DESTDIR)/usr/lib/$(BIN)/wxdfast.ico
	rm -f $(DESTDIR)/usr/lib/$(BIN)/$(RESOURCE_DIR)*.xrc
	rm -f $(DESTDIR)/usr/share/locale/pt_BR/LC_MESSAGES/wxDFast.mo
	rm -f $(DESTDIR)/usr/share/locale/es/LC_MESSAGES/wxDFast.mo
	rm -f $(DESTDIR)/usr/lib/menu/wxdfast
	rm -f $(DESTDIR)/usr/share/applications/wxdfast.desktop
	rmdir $(DESTDIR)/usr/lib/$(BIN)

source:
	rm -f $(BIN)-$(VERSION)-src.tar.gz
	rm -rf $(BIN)-$(VERSION)-src
	mkdir $(BIN)-$(VERSION)-src
	cp -r languages $(BIN)-$(VERSION)-src
	mkdir $(BIN)-$(VERSION)-src/resources
	cp resources/*.xpm $(BIN)-$(VERSION)-src/resources
	cp resources/*.ico $(BIN)-$(VERSION)-src/resources
	cp resources/*.xrc $(BIN)-$(VERSION)-src/resources
	mkdir $(BIN)-$(VERSION)-src/resources/small
	cp resources/small/*.xpm $(BIN)-$(VERSION)-src/resources/small
	mkdir $(BIN)-$(VERSION)-src/resources/big
	cp resources/big/*.xpm $(BIN)-$(VERSION)-src/resources/big
	mkdir $(BIN)-$(VERSION)-src/src
	mkdir $(BIN)-$(VERSION)-src/src/wxMD5
	cp gpl.txt $(BIN)-$(VERSION)-src
	cp Readme.* $(BIN)-$(VERSION)-src
	cp Changes.* $(BIN)-$(VERSION)-src
	cp ToDo.* $(BIN)-$(VERSION)-src
	cp src/*.cpp $(BIN)-$(VERSION)-src/src
	cp src/*.h $(BIN)-$(VERSION)-src/src
	cp src/*.rc $(BIN)-$(VERSION)-src/src
	cp src/wxMD5/*.c $(BIN)-$(VERSION)-src/src/wxMD5
	cp src/wxMD5/*.cpp $(BIN)-$(VERSION)-src/src/wxMD5
	cp src/wxMD5/*.h $(BIN)-$(VERSION)-src/src/wxMD5
	cp Makefile $(BIN)-$(VERSION)-src
	cp makefile.vc $(BIN)-$(VERSION)-src
	tar -cf $(BIN)-$(VERSION)-src.tar $(BIN)-$(VERSION)-src
	gzip $(BIN)-$(VERSION)-src.tar
	rm -r $(BIN)-$(VERSION)-src

clean:
	rm -fr $(BUILD_DIR) $(BIN)-$(VERSION)-src

cleanall:
	rm -fr $(BIN) $(BIN).exe $(BUILD_DIR) $(BIN)-$(VERSION)-src $(BIN)-$(VERSION)-src.tar.gz
